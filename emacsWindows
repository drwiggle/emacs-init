;; ===================================
;; MELPA Package Support
;; ===================================
;; Enables basic packaging support
(require 'package)

;; Adds various archive repositories to the available list
;;
(add-to-list 'package-archives
             '("melpa" . "http://melpa.org/packages/") t)
(add-to-list 'package-archives
             '("org" . "http://orgmode.org/elpa/") t)
(add-to-list 'package-archives
             '("gnu" . "https://elpa.gnu.org/packages/") t)

;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)

;; If there are no archived package contents, refresh them
(when (not package-archive-contents)
  (package-refresh-contents))

;; Installs packages if not already installed
;; myPackages contains a list of package names
(defvar myPackages
  '(auctex                          ;; For Latex development environment
    better-defaults                 ;; Set up some better Emacs defaults
    elpy                            ;; Emacs Lisp Python Environment
    flycheck                        ;; On the fly syntax checking
    py-autopep8                     ;; Run autopep8 on save
    blacken                         ;; black formatting on save
    magit                           ;; Git Integration
    virtualenvwrapper               ;; virtual environment management
    material-theme                  ;; Dark theme
    markdown-mode                   ;; supports markdown document creation
    )
  )

;; Scans the list in myPackages
;; If the package listed is not already installed, install it
(mapc #'(lambda (package)
          (unless (package-installed-p package)
            (package-install package)))
      myPackages)

;; ===================================
;; Eshell Customization
;; ===================================

(setq eshell-prompt-regexp "^[^#$\n]*[#$] "
      eshell-prompt-function
      (lambda nil
        (concat
	 "[" (user-login-name) "@" (system-name) " "
	 (if (string= (eshell/pwd) (getenv "HOME"))
	     "~" (eshell/basename (eshell/pwd)))
	 "]"
	 (if (= (user-uid) 0) "# " "$ "))))

;; ===================================
;; Basic Customization
;; ===================================



(load-theme 'material t)             ;; Load dark theme!
(global-linum-mode t)                ;; Global line numbers


;; ====================================
;; Development Setup
;; ====================================
;; Load the better-defaults package
(require 'better-defaults)
(require 'elpy)
(require 'virtualenvwrapper)

;; If windows starts giving errors about elpy/python, it may be because the default
;; language environment is not set correctly.  Try this
;; (set-language-environment "UTF-8")

;; set virtualenv upon loading a python file (or aupon changing buffers
(venv-initialize-interactive-shells) ;; if you want interactive shell support
;; (venv-initialize-eshell) ;; if you want eshell support
;; note that setting `venv-location` is not necessary if you
;; use the default location (`~/.virtualenvs`), or if the
;; the environment variable `WORKON_HOME` points to the right place
;; (setq venv-location "c:/Users/Dr Wiggle/.virtualenvs/")

;; Enable python-mode on python files
(setq elpy-rpc-virtualenv-path 'current)
(setq elpy-rpc-python-command "python")
(elpy-enable)

;; Enable Flycheck
(when (require 'flycheck nil t)
  (setq elpy-modules (delq 'elpy-module-flymake elpy-modules))
  (add-hook 'elpy-mode-hook 'flycheck-mode))

;; By default, Flycheck will try to use the incorrect python installation
;; This can be "fixed" by changing a single variable, but then flycheck
;; won't operate correctly with the virtualenvironment.  This fixes that
(setq flycheck-python-pycompile-executable "python")
(setq flycheck-python-flake8-executable "python")
(setq elpy-rpc-backend "jedi")

;;(defun set-flychecker-executables ()
;;  "Configure virtualenv for pycompile, flake8, and lint."
;;  (when (get-current-buffer-pycompile)
;;    (flycheck-set-checker-executable (quote python-pycompile)
;;                                     (get-current-buffer-pycompile)))
;;  (when (get-current-buffer-flake8)
;;    (flycheck-set-checker-executable (quote python-flake8)
;;                                     (get-current-buffer-flake8)))
;;  (when (get-current-buffer-pylint)
;;    (flycheck-set-checker-executable (quote python-pylint)
;;                                     (get-current-buffer-pylint))))
;;(add-hook 'flycheck-before-syntax-check-hook
;;          #'set-flychecker-executables 'local)

;; Enable autopep8
(require 'py-autopep8)
(add-hook 'elpy-mode-hook 'py-autopep8-enable-on-save)


;; ===================================
;; AucTex/LaTex setup
;; ===================================

;; (set-face-attribute 'region nil :background "#666")

;; (setq default-directory "../../media/Files/")

;; AucTex requires parsing files (which is slow) to function well
;; auto-save and parse-self allow the creation of the /auto/ directory
;; where AucTex can save the parsing data and load later
(setq TeX-auto-save t)
(setq TeX-parse-self t)

;; Sets the default "master file" for creating a new LaTeX doc
(setq-default TeX-master nil)

;; If non-nil, then query user before saving each
;; file with TeX-save-document.
(setq TeX-save-query nil)     

;; don't highlight syntax inside these
(setq LaTeX-verbatim-environments '("Verbatim" "lstlisting"))
(setq LaTeX-verbatim-macros-with-delims '("lstinline" "verb" "verb*"))

;; Turns on word-wrapping and causes C-k, C-a, C-e to operate w.r.t
;; visual lines rather than actual lines.
(add-hook 'LaTeX-modep-hook 'visual-line-mode)
(add-hook 'LaTeX-mode-hook 'flyspell-mode)
(add-hook 'LaTeX-mode-hook 'LaTeX-math-mode)

;; Inserts {} automaticly on _ and ^ (no need for custom command)
(setq TeX-electric-sub-and-superscript t)

;; Sets up reftex
(add-hook 'LaTeX-mode-hook 'turn-on-reftex)
(setq reftex-plug-into-AUCTeX t)

;; ===================================
;; Garbage from using the package manager
;; ===================================

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages '(material-theme elpy better-defaults auctex)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
